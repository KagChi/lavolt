apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "com.adarshr.test-logger"

mainClassName = "lavolt.Main"
version = "1.0-SNAPSHOT"
ext {
    moduleName = 'Lavolt-Server'
}

bootJar {
    archiveFileName = "Lavolt.jar"
}

sourceCompatibility = targetCompatibility = 11

bootRun {
    //compiling tests during bootRun increases the likelihood of catching broken tests locally instead of on the CI
    dependsOn compileTestJava

    //pass in custom jvm args
    // source: https://stackoverflow.com/a/25079415
    // example: ./gradlew bootRun -PjvmArgs="--illegal-access=debug -Dwhatever=value"
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}

dependencies {
    compile group: 'com.github.walkyst', name: 'lavaplayer-fork', version: lavaplayerVersion
    //compile group: 'com.sedmelluq', name: 'lavaplayer', version: lavaplayerVersion
    compile(group: 'com.github.walkyst.lavaplayer-fork', name: 'lavaplayer-ext-youtube-rotator', version: lavaplayerVersion)
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlinVersion

    compile group: 'org.springframework', name: 'spring-websocket', version: springWebSocketVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion) {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    compile group: 'org.json', name: 'json', version: jsonOrgVersion
    compile group: 'com.google.code.gson', name: 'gson', version: gsonVersion

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: springBootVersion

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
}

build {
    doLast {
        println 'Version: ' + version
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
